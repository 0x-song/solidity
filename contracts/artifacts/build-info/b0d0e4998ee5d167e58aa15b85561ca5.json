{
	"id": "b0d0e4998ee5d167e58aa15b85561ca5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"MappingTest.sol": {
				"content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.7;\ncontract MappingTest {\n    \n    mapping (address => uint) public balances;\n\n    mapping (address => mapping (address => bool)) public isFriends;\n\n    function examples() external {\n        //给映射进行赋值操作\n        balances[msg.sender] = 123;\n        uint balance1 = balances[msg.sender];\n        //Explicit conversions to and from address are allowed for uint160, integer literals, bytes20 and contract types.\n        uint balance2 = balances[address(1)];\n\n        balances[msg.sender] += 123;\n        //delete操作也不是真正的删除，而是重置\n        delete balances[msg.sender];\n\n        isFriends[msg.sender][address(this)] = true;\n        //映射必须是storage类型\n        mapping (address => bool) storage friendsInfo = isFriends[msg.sender];\n        // 返回的结果是true\n        bool result = friendsInfo[address(this)];\n        //返回结果是false\n        bool result2 = friendsInfo[address(1)];\n        //testMap(balances);\n    }\n\n    //Data location must be \"memory\" or \"calldata\" for parameter in function, but none was given.\n    //但是mapping不可以设置memory或者calldata\n    // function testMap(mapping (address => uint) bals) public{\n    //     uint bal = bals[msg.sender];\n    // }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MappingTest.sol": {
				"MappingTest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "examples",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isFriends",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MappingTest.sol\":75:1319  contract MappingTest {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MappingTest.sol\":75:1319  contract MappingTest {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x335d00c2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x78f975af\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MappingTest.sol\":107:148  mapping (address => uint) public balances */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MappingTest.sol\":225:1050  function examples() external {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"MappingTest.sol\":155:218  mapping (address => mapping (address => bool)) public isFriends */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MappingTest.sol\":107:148  mapping (address => uint) public balances */\n    tag_9:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"MappingTest.sol\":225:1050  function examples() external {... */\n    tag_13:\n        /* \"MappingTest.sol\":325:328  123 */\n      0x7b\n        /* \"MappingTest.sol\":302:310  balances */\n      0x00\n        /* \"MappingTest.sol\":302:322  balances[msg.sender] */\n      dup1\n        /* \"MappingTest.sol\":311:321  msg.sender */\n      caller\n        /* \"MappingTest.sol\":302:322  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingTest.sol\":302:328  balances[msg.sender] = 123 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MappingTest.sol\":338:351  uint balance1 */\n      0x00\n        /* \"MappingTest.sol\":354:362  balances */\n      dup1\n        /* \"MappingTest.sol\":354:374  balances[msg.sender] */\n      0x00\n        /* \"MappingTest.sol\":363:373  msg.sender */\n      caller\n        /* \"MappingTest.sol\":354:374  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MappingTest.sol\":338:374  uint balance1 = balances[msg.sender] */\n      swap1\n      pop\n        /* \"MappingTest.sol\":506:519  uint balance2 */\n      0x00\n        /* \"MappingTest.sol\":522:530  balances */\n      dup1\n        /* \"MappingTest.sol\":522:542  balances[address(1)] */\n      0x00\n        /* \"MappingTest.sol\":539:540  1 */\n      0x01\n        /* \"MappingTest.sol\":522:542  balances[address(1)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MappingTest.sol\":506:542  uint balance2 = balances[address(1)] */\n      swap1\n      pop\n        /* \"MappingTest.sol\":577:580  123 */\n      0x7b\n        /* \"MappingTest.sol\":553:561  balances */\n      0x00\n        /* \"MappingTest.sol\":553:573  balances[msg.sender] */\n      dup1\n        /* \"MappingTest.sol\":562:572  msg.sender */\n      caller\n        /* \"MappingTest.sol\":553:573  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MappingTest.sol\":553:580  balances[msg.sender] += 123 */\n      dup3\n      dup3\n      sload\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MappingTest.sol\":659:667  balances */\n      0x00\n        /* \"MappingTest.sol\":659:679  balances[msg.sender] */\n      dup1\n        /* \"MappingTest.sol\":668:678  msg.sender */\n      caller\n        /* \"MappingTest.sol\":659:679  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingTest.sol\":652:679  delete balances[msg.sender] */\n      0x00\n      swap1\n      sstore\n        /* \"MappingTest.sol\":729:733  true */\n      0x01\n        /* \"MappingTest.sol\":690:699  isFriends */\n      dup1\n        /* \"MappingTest.sol\":690:711  isFriends[msg.sender] */\n      0x00\n        /* \"MappingTest.sol\":700:710  msg.sender */\n      caller\n        /* \"MappingTest.sol\":690:711  isFriends[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingTest.sol\":690:726  isFriends[msg.sender][address(this)] */\n      0x00\n        /* \"MappingTest.sol\":720:724  this */\n      address\n        /* \"MappingTest.sol\":690:726  isFriends[msg.sender][address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MappingTest.sol\":690:733  isFriends[msg.sender][address(this)] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MappingTest.sol\":782:827  mapping (address => bool) storage friendsInfo */\n      0x00\n        /* \"MappingTest.sol\":830:839  isFriends */\n      0x01\n        /* \"MappingTest.sol\":830:851  isFriends[msg.sender] */\n      0x00\n        /* \"MappingTest.sol\":840:850  msg.sender */\n      caller\n        /* \"MappingTest.sol\":830:851  isFriends[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingTest.sol\":782:851  mapping (address => bool) storage friendsInfo = isFriends[msg.sender] */\n      swap1\n      pop\n        /* \"MappingTest.sol\":895:906  bool result */\n      0x00\n        /* \"MappingTest.sol\":909:920  friendsInfo */\n      dup2\n        /* \"MappingTest.sol\":909:935  friendsInfo[address(this)] */\n      0x00\n        /* \"MappingTest.sol\":929:933  this */\n      address\n        /* \"MappingTest.sol\":909:935  friendsInfo[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MappingTest.sol\":895:935  bool result = friendsInfo[address(this)] */\n      swap1\n      pop\n        /* \"MappingTest.sol\":976:988  bool result2 */\n      0x00\n        /* \"MappingTest.sol\":991:1002  friendsInfo */\n      dup3\n        /* \"MappingTest.sol\":991:1014  friendsInfo[address(1)] */\n      0x00\n        /* \"MappingTest.sol\":1011:1012  1 */\n      0x01\n        /* \"MappingTest.sol\":991:1014  friendsInfo[address(1)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MappingTest.sol\":976:1014  bool result2 = friendsInfo[address(1)] */\n      swap1\n      pop\n        /* \"MappingTest.sol\":254:1050  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"MappingTest.sol\":225:1050  function examples() external {... */\n      jump\t// out\n        /* \"MappingTest.sol\":155:218  mapping (address => mapping (address => bool)) public isFriends */\n    tag_17:\n      mstore(0x20, 0x01)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_24:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_26:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_27:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_41\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_28:\n        /* \"#utility.yul\":641:665   */\n      tag_43\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_27\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_44:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_29:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_46\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_28\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_49\n      tag_24\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":917:1036   */\n    tag_48:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_50\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_29\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_30:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_31:\n        /* \"#utility.yul\":1346:1370   */\n      tag_53\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_11:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_55\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_31\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:2085   */\n    tag_16:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1687:1693   */\n      dup1\n        /* \"#utility.yul\":1736:1738   */\n      0x40\n        /* \"#utility.yul\":1724:1733   */\n      dup4\n        /* \"#utility.yul\":1715:1722   */\n      dup6\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_58\n      tag_24\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1704:1823   */\n    tag_57:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_59\n        /* \"#utility.yul\":1932:1939   */\n      dup6\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup7\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_29\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1877:1940   */\n      swap3\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1989:1991   */\n      0x20\n        /* \"#utility.yul\":2015:2068   */\n      tag_60\n        /* \"#utility.yul\":2060:2067   */\n      dup6\n        /* \"#utility.yul\":2051:2057   */\n      dup3\n        /* \"#utility.yul\":2040:2049   */\n      dup7\n        /* \"#utility.yul\":2036:2058   */\n      add\n        /* \"#utility.yul\":2015:2068   */\n      tag_29\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2005:2068   */\n      swap2\n      pop\n        /* \"#utility.yul\":1960:2078   */\n      pop\n        /* \"#utility.yul\":1611:2085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2181   */\n    tag_32:\n        /* \"#utility.yul\":2125:2132   */\n      0x00\n        /* \"#utility.yul\":2168:2173   */\n      dup2\n        /* \"#utility.yul\":2161:2174   */\n      iszero\n        /* \"#utility.yul\":2154:2175   */\n      iszero\n        /* \"#utility.yul\":2143:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2296   */\n    tag_33:\n        /* \"#utility.yul\":2268:2289   */\n      tag_63\n        /* \"#utility.yul\":2283:2288   */\n      dup2\n        /* \"#utility.yul\":2268:2289   */\n      tag_32\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2263:2266   */\n      dup3\n        /* \"#utility.yul\":2256:2290   */\n      mstore\n        /* \"#utility.yul\":2187:2296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2302:2512   */\n    tag_19:\n        /* \"#utility.yul\":2389:2393   */\n      0x00\n        /* \"#utility.yul\":2427:2429   */\n      0x20\n        /* \"#utility.yul\":2416:2425   */\n      dup3\n        /* \"#utility.yul\":2412:2430   */\n      add\n        /* \"#utility.yul\":2404:2430   */\n      swap1\n      pop\n        /* \"#utility.yul\":2440:2505   */\n      tag_65\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2491:2500   */\n      dup4\n        /* \"#utility.yul\":2487:2504   */\n      add\n        /* \"#utility.yul\":2478:2484   */\n      dup5\n        /* \"#utility.yul\":2440:2505   */\n      tag_33\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2302:2512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2698   */\n    tag_34:\n        /* \"#utility.yul\":2566:2643   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2563:2564   */\n      0x00\n        /* \"#utility.yul\":2556:2644   */\n      mstore\n        /* \"#utility.yul\":2663:2667   */\n      0x11\n        /* \"#utility.yul\":2660:2661   */\n      0x04\n        /* \"#utility.yul\":2653:2668   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x24\n        /* \"#utility.yul\":2684:2685   */\n      0x00\n        /* \"#utility.yul\":2677:2692   */\n      revert\n        /* \"#utility.yul\":2704:2895   */\n    tag_22:\n        /* \"#utility.yul\":2744:2747   */\n      0x00\n        /* \"#utility.yul\":2763:2783   */\n      tag_68\n        /* \"#utility.yul\":2781:2782   */\n      dup3\n        /* \"#utility.yul\":2763:2783   */\n      tag_30\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2758:2783   */\n      swap2\n      pop\n        /* \"#utility.yul\":2797:2817   */\n      tag_69\n        /* \"#utility.yul\":2815:2816   */\n      dup4\n        /* \"#utility.yul\":2797:2817   */\n      tag_30\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2792:2817   */\n      swap3\n      pop\n        /* \"#utility.yul\":2840:2841   */\n      dup3\n        /* \"#utility.yul\":2837:2838   */\n      dup3\n        /* \"#utility.yul\":2833:2842   */\n      add\n        /* \"#utility.yul\":2826:2842   */\n      swap1\n      pop\n        /* \"#utility.yul\":2861:2864   */\n      dup1\n        /* \"#utility.yul\":2858:2859   */\n      dup3\n        /* \"#utility.yul\":2855:2865   */\n      gt\n        /* \"#utility.yul\":2852:2888   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2868:2886   */\n      tag_71\n      tag_34\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2852:2888   */\n    tag_70:\n        /* \"#utility.yul\":2704:2895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220354e8a9281f58e7080e6f467c305f113b218d87f1d7dbc071d09899b53b42fba64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806327e235e314610046578063335d00c21461007657806378f975af14610080575b600080fd5b610060600480360381019061005b919061043c565b6100b0565b60405161006d9190610482565b60405180910390f35b61007e6100c8565b005b61009a6004803603810190610095919061049d565b6103aa565b6040516100a791906104f8565b60405180910390f35b60006020528060005260406000206000915090505481565b607b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050607b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101e29190610542565b925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000826000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505050505050565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610409826103de565b9050919050565b610419816103fe565b811461042457600080fd5b50565b60008135905061043681610410565b92915050565b600060208284031215610452576104516103d9565b5b600061046084828501610427565b91505092915050565b6000819050919050565b61047c81610469565b82525050565b60006020820190506104976000830184610473565b92915050565b600080604083850312156104b4576104b36103d9565b5b60006104c285828601610427565b92505060206104d385828601610427565b9150509250929050565b60008115159050919050565b6104f2816104dd565b82525050565b600060208201905061050d60008301846104e9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054d82610469565b915061055883610469565b92508282019050808211156105705761056f610513565b5b9291505056fea2646970667358221220354e8a9281f58e7080e6f467c305f113b218d87f1d7dbc071d09899b53b42fba64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x335D00C2 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x78F975AF EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x7B PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409 DUP3 PUSH2 0x3DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x419 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP2 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x436 DUP2 PUSH2 0x410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x3D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP5 DUP3 DUP6 ADD PUSH2 0x427 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x469 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x497 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B3 PUSH2 0x3D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP6 DUP3 DUP7 ADD PUSH2 0x427 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D3 DUP6 DUP3 DUP7 ADD PUSH2 0x427 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F2 DUP2 PUSH2 0x4DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x469 JUMP JUMPDEST SWAP2 POP PUSH2 0x558 DUP4 PUSH2 0x469 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0x513 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x4E DUP11 SWAP3 DUP2 CREATE2 DUP15 PUSH17 0x80E6F467C305F113B218D87F1D7DBC071D MULMOD DUP10 SWAP12 MSTORE8 0xB4 0x2F 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "75:1244:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balances_5": {
									"entryPoint": 176,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@examples_90": {
									"entryPoint": 200,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFriends_11": {
									"entryPoint": 938,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2898:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:1",
														"type": ""
													}
												],
												"src": "1259:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:1",
														"type": ""
													}
												],
												"src": "1383:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:1"
															},
															"nodeType": "YulIf",
															"src": "1704:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1960:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1975:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1979:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2005:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2015:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2005:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1656:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1667:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1679:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1687:6:1",
														"type": ""
													}
												],
												"src": "1611:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2125:7:1",
														"type": ""
													}
												],
												"src": "2091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2241:3:1",
														"type": ""
													}
												],
												"src": "2187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2389:4:1",
														"type": ""
													}
												],
												"src": "2302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2546:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2556:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2653:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2687:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2518:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2748:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2758:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2781:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2763:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2758:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2792:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2815:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2797:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2792:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2826:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2837:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2840:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2826:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2866:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2868:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2868:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2868:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2858:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2861:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2855:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:10:1"
															},
															"nodeType": "YulIf",
															"src": "2852:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2735:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2738:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2744:3:1",
														"type": ""
													}
												],
												"src": "2704:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806327e235e314610046578063335d00c21461007657806378f975af14610080575b600080fd5b610060600480360381019061005b919061043c565b6100b0565b60405161006d9190610482565b60405180910390f35b61007e6100c8565b005b61009a6004803603810190610095919061049d565b6103aa565b6040516100a791906104f8565b60405180910390f35b60006020528060005260406000206000915090505481565b607b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050607b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101e29190610542565b925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000826000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505050505050565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610409826103de565b9050919050565b610419816103fe565b811461042457600080fd5b50565b60008135905061043681610410565b92915050565b600060208284031215610452576104516103d9565b5b600061046084828501610427565b91505092915050565b6000819050919050565b61047c81610469565b82525050565b60006020820190506104976000830184610473565b92915050565b600080604083850312156104b4576104b36103d9565b5b60006104c285828601610427565b92505060206104d385828601610427565b9150509250929050565b60008115159050919050565b6104f2816104dd565b82525050565b600060208201905061050d60008301846104e9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054d82610469565b915061055883610469565b92508282019050808211156105705761056f610513565b5b9291505056fea2646970667358221220354e8a9281f58e7080e6f467c305f113b218d87f1d7dbc071d09899b53b42fba64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x335D00C2 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x78F975AF EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x7B PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409 DUP3 PUSH2 0x3DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x419 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP2 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x436 DUP2 PUSH2 0x410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x3D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP5 DUP3 DUP6 ADD PUSH2 0x427 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x469 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x497 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B3 PUSH2 0x3D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP6 DUP3 DUP7 ADD PUSH2 0x427 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D3 DUP6 DUP3 DUP7 ADD PUSH2 0x427 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F2 DUP2 PUSH2 0x4DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x469 JUMP JUMPDEST SWAP2 POP PUSH2 0x558 DUP4 PUSH2 0x469 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0x513 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x4E DUP11 SWAP3 DUP2 CREATE2 DUP15 PUSH17 0x80E6F467C305F113B218D87F1D7DBC071D MULMOD DUP10 SWAP12 MSTORE8 0xB4 0x2F 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "75:1244:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;107:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;225:825;;;:::i;:::-;;155:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;107:41;;;;;;;;;;;;;;;;;:::o;225:825::-;325:3;302:8;:20;311:10;302:20;;;;;;;;;;;;;;;:26;;;;338:13;354:8;:20;363:10;354:20;;;;;;;;;;;;;;;;338:36;;506:13;522:8;:20;539:1;522:20;;;;;;;;;;;;;;;;506:36;;577:3;553:8;:20;562:10;553:20;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;659:8;:20;668:10;659:20;;;;;;;;;;;;;;;652:27;;;729:4;690:9;:21;700:10;690:21;;;;;;;;;;;;;;;:36;720:4;690:36;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;782:45;830:9;:21;840:10;830:21;;;;;;;;;;;;;;;782:69;;895:11;909;:26;929:4;909:26;;;;;;;;;;;;;;;;;;;;;;;;;895:40;;976:12;991:11;:23;1011:1;991:23;;;;;;;;;;;;;;;;;;;;;;;;;976:38;;254:796;;;;;225:825::o;155:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:474::-;1679:6;1687;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1989:2;2015:53;2060:7;2051:6;2040:9;2036:22;2015:53;:::i;:::-;2005:63;;1960:118;1611:474;;;;;:::o;2091:90::-;2125:7;2168:5;2161:13;2154:21;2143:32;;2091:90;;;:::o;2187:109::-;2268:21;2283:5;2268:21;:::i;:::-;2263:3;2256:34;2187:109;;:::o;2302:210::-;2389:4;2427:2;2416:9;2412:18;2404:26;;2440:65;2502:1;2491:9;2487:17;2478:6;2440:65;:::i;:::-;2302:210;;;;:::o;2518:180::-;2566:77;2563:1;2556:88;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2704:191;2744:3;2763:20;2781:1;2763:20;:::i;:::-;2758:25;;2797:20;2815:1;2797:20;:::i;:::-;2792:25;;2840:1;2837;2833:9;2826:16;;2861:3;2858:1;2855:10;2852:36;;;2868:18;;:::i;:::-;2852:36;2704:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "290400",
								"executionCost": "331",
								"totalCost": "290731"
							},
							"external": {
								"balances(address)": "2792",
								"examples()": "infinite",
								"isFriends(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1319,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220354e8a9281f58e7080e6f467c305f113b218d87f1d7dbc071d09899b53b42fba64736f6c63430008110033",
									".code": [
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "27E235E3"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "335D00C2"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "78F975AF"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 107,
											"end": 148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 107,
											"end": 148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 107,
											"end": 148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 155,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 155,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 155,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 302,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 302,
											"end": 328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 328,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 373,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 354,
											"end": 374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 522,
											"end": 542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 553,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 678,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 659,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 652,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 710,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 724,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 690,
											"end": 733,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 690,
											"end": 733,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 830,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 850,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 830,
											"end": 851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 830,
											"end": 851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 782,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 933,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 909,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 909,
											"end": 935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 1050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 155,
											"end": 218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2049,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2015,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2091,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2187,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2283,
											"end": 2288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2268,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2512,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2302,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2440,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2505,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2440,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2518,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2643,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2704,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2763,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2783,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2763,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2815,
											"end": 2816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2797,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2888,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2852,
											"end": 2888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2868,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2888,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2852,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"MappingTest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"examples()": "335d00c2",
							"isFriends(address,address)": "78f975af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"examples\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFriends\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MappingTest.sol\":\"MappingTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MappingTest.sol\":{\"keccak256\":\"0xef584f94c64d6720ab07110679010abba0f301290db83e9cdc762f1032ddfb38\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://04a6b26c76706e854dc3d243d5db5e03d6fa704f55225860a4fb7a24c6b4b876\",\"dweb:/ipfs/QmP7Zv8uhtWmwHbEi1S1mpbtjW9r3N7AVPJRvGbRvZZyGT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "MappingTest.sol:MappingTest",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 11,
								"contract": "MappingTest.sol:MappingTest",
								"label": "isFriends",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> MappingTest.sol:12:9:\n   |\n12 |         uint balance1 = balances[msg.sender];\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 351,
					"file": "MappingTest.sol",
					"start": 338
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> MappingTest.sol:14:9:\n   |\n14 |         uint balance2 = balances[address(1)];\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 519,
					"file": "MappingTest.sol",
					"start": 506
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> MappingTest.sol:24:9:\n   |\n24 |         bool result = friendsInfo[address(this)];\n   |         ^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 906,
					"file": "MappingTest.sol",
					"start": 895
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> MappingTest.sol:26:9:\n   |\n26 |         bool result2 = friendsInfo[address(1)];\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 988,
					"file": "MappingTest.sol",
					"start": 976
				},
				"type": "Warning"
			}
		],
		"sources": {
			"MappingTest.sol": {
				"ast": {
					"absolutePath": "MappingTest.sol",
					"exportedSymbols": {
						"MappingTest": [
							91
						]
					},
					"id": 92,
					"license": "SEE LICENSE IN LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "51:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MappingTest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "MappingTest",
							"nameLocation": "84:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "140:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "107:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "107:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "127:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78f975af",
									"id": 11,
									"mutability": "mutable",
									"name": "isFriends",
									"nameLocation": "209:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "155:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "164:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "155:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 9,
											"keyType": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "184:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "175:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "195:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "254:796:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "302:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 17,
														"indexExpression": {
															"expression": {
																"id": 15,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "311:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "315:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "311:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "302:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313233",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "325:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"src": "302:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "302:26:0"
											},
											{
												"assignments": [
													22
												],
												"declarations": [
													{
														"constant": false,
														"id": 22,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "343:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "338:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 21,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"baseExpression": {
														"id": 23,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "354:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 26,
													"indexExpression": {
														"expression": {
															"id": 24,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "363:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "367:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "363:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "354:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "338:36:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "balance2",
														"nameLocation": "511:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "506:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "506:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"baseExpression": {
														"id": 30,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "522:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 35,
													"indexExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "531:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "531:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "522:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "506:36:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 37,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "553:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 40,
														"indexExpression": {
															"expression": {
																"id": 38,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "562:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "566:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "313233",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "577:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"src": "553:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "553:27:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "652:27:0",
													"subExpression": {
														"baseExpression": {
															"id": 44,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "659:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "668:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "672:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "668:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "659:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "652:27:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 50,
																"name": "isFriends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "690:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 57,
															"indexExpression": {
																"expression": {
																	"id": 51,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "700:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "704:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "690:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 58,
														"indexExpression": {
															"arguments": [
																{
																	"id": 55,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "720:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MappingTest_$91",
																		"typeString": "contract MappingTest"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MappingTest_$91",
																		"typeString": "contract MappingTest"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "712:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "712:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "690:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "729:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "690:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "690:43:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "friendsInfo",
														"nameLocation": "816:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "782:45:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														},
														"typeName": {
															"id": 64,
															"keyType": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Mapping",
															"src": "782:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															},
															"valueType": {
																"id": 63,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "802:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"baseExpression": {
														"id": 66,
														"name": "isFriends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "830:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
															"typeString": "mapping(address => mapping(address => bool))"
														}
													},
													"id": 69,
													"indexExpression": {
														"expression": {
															"id": 67,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "840:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "844:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "830:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "782:69:0"
											},
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "900:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "895:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 71,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "895:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"baseExpression": {
														"id": 73,
														"name": "friendsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "909:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"arguments": [
															{
																"id": 76,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "929:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MappingTest_$91",
																	"typeString": "contract MappingTest"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MappingTest_$91",
																	"typeString": "contract MappingTest"
																}
															],
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 74,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "921:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "921:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "909:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "895:40:0"
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "result2",
														"nameLocation": "981:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "976:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 80,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "976:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 88,
												"initialValue": {
													"baseExpression": {
														"id": 82,
														"name": "friendsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "991:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 87,
													"indexExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1011:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 83,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1003:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1003:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "991:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "976:38:0"
											}
										]
									},
									"functionSelector": "335d00c2",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "examples",
									"nameLocation": "234:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "242:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:0:0"
									},
									"scope": 91,
									"src": "225:825:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "75:1244:0",
							"usedErrors": []
						}
					],
					"src": "51:1268:0"
				},
				"id": 0
			}
		}
	}
}